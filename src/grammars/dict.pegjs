Start
= Block*
Block
= Meta
/ BlankLines
/ Path
/ Comment
/ Single
/ Multiple
Meta
= '// Dictionary generated by Emuera Toolbox and can be manually edited.\n'i
'// Name:'i name:[^\n\t\r]+ '\n'
'// Version:'i version:[^\n\t\r]+ '\n'
'// Author:'i author:[^\n\t\r]+ '\n'
'// Created:'i c:[0-9/ :]+ '\n'
'// Modified:'i m:[0-9/ :]+ '\n'
{ return { type: 'Meta', name: name.join('').trim(), version: version.join('').trim(), author: author.join('').trim(), c: Date.parse(c.join('').trim()), m: Date.parse(m.join('').trim()) } }
BlankLines
= bl:[ \n\t\r]+ [\r?\n]? {
  const v = bl.reduce((n,char)=>{return n+(char==='\n'?1:0)}, 0)
  return { type: 'BlankLines', value: v }
}
Comment
= '//' comment:[^\n\r]* [\r?\n]? { return { type: 'Comment', value: comment.join('') } }
Path
= '// Path:' [ \t]* path:[^\n\r]* [\r?\n]? { return { type: 'Path', value: path.join('').trim() } }
Single
= r:[^\n\t\r]+ '\t' w:[^\n\t\r]+ [\r?\n]? { return { type: 'Dict', r: r.join(''), w: w.join('') } }
Multiple
= '<replace>\n' r:(!'<with>\n' .)+ '<with>\n' w:(!'<block>' .)+ '<block>' [\r?\n]? { return { type: 'Dict', r: r.map(c=>{return c[1]}).join(''), w: w.map(c=>{return c[1]}).join('') } }
